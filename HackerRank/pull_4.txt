//Create a Link List

#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *next;
}*head;

void createList(int n);
void insertNodeAtlocation(int data);
void displayList();

int main()
{
    int n,data;
    printf("Enter the total number of nodes: ");
    scanf("%d",&n);
    createList(n);
    printf("\nData in the list\n");
    displayList();
    printf("\nEnter data to insert at location: ");
    scanf("%d",&data);
    insertNodeAtlocation(data);
    displayList();
}
void createList(int n)
{
    struct node *NewNode,*temp;
    int data,i;
    head=(struct node*)malloc(sizeof(struct node));
    if(head==NULL)
    {
        printf("Unable to allocate memory");
    }
    else
    {
        printf("Enter data of node 1: ");
        scanf("%d",&data);
        head->data=data;
        head->next=NULL;
        temp=head;
        for(i=2;i<=n;i++)
        {
            NewNode=(struct node*)malloc(sizeof(struct node));
            if(NewNode==NULL)
            {
                printf("Unable to allocate memory");
                break;
            }
            else
            {
                printf("Enter data of node %d: ",i);
                scanf("%d",&data);
                NewNode->data=data;
                NewNode->next=NULL;
                temp->next=NewNode;
                temp=temp->next;
            }
        }
        printf("SINGLY LINKED LIST CREATED...\n");
    }

}
void insertNodeAtlocation(int data)
{
    struct node *NewNode,*ptr,*preptr;
    int num;
    NewNode=(struct node*)malloc(sizeof(struct node));
    NewNode->data=data;
    printf("Enter the number after which you want to insert value: ");
    scanf("%d",&num);
    if(NewNode==NULL)
    {
        printf("Unable to allocate memory....\n");
    }
    else
    {
        ptr=head;
        preptr=ptr;
        while(preptr->data!=num)
        {
            preptr=ptr;
            ptr=ptr->next;
        }
        preptr->next=NewNode;
        NewNode->next=ptr;

    }
}
void displayList()
{
    struct node *temp;
    if(head==NULL)
    {
        printf("List empty");
    }
    else
    {
        temp=head;
        while(temp!=NULL)
        {
            printf("Data = %d\n",temp->data);
            temp=temp->next;
        }
    }
}
